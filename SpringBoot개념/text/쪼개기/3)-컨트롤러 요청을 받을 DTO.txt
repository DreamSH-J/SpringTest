3) 서비스 메소드 작성하기

- 서비스 계층에서 요청을 받을 객체 (AddArticleRequest)

- 블로그글 추가 메소드 save() 구현

**** DTO(Data Transfer Object)는 계층끼리 데이터를 교환하기 위해 사용하는 객체
	(단순하게 데이터를 옮기기위해 사용하는 전달자 역할을 하는 객체이기 때문에 
						별도의 비즈니스 로직을 포함하지 않음)

**** DAO는 데이터 베이스와 연결되고 데이터를 조회하고 수정하는 데 사용하는 객체
	(데이터 수정과 관련된 로직이 포함)

dto 패키지를 컨트롤러에서 요청한 본문을 받을 객체인
AddArticleRequest.java 파일 생성

AddArticleRequest

@NoArgsConstructor
@AllArgsConstructor
@Getter
public class AddArticleRequest {

	private String title;
	private String content;

	public Article toEntity() {
		return Article.builder()
			.title(title)
			.content(content)
			.build();
	}
}

*** toEntity()는 빌더 패턴을 사용해 DTO를 엔티티로 만들어주는 메소드
	(추후에 블로그 글을 추가할 때 자장할 엔티티로 변환하는 용도로 사용)

