plugins {   // (1)
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.0'
}
// (2)
group = 'me.hackerj'    // 지정한 그룹 이름
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'

repositories {  // (3)
    mavenCentral()
}

dependencies {
//    web 스타터와 test 스타터가 의존성으로 명시되어 있음
    implementation  'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    스프링 데이터 JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2' //인메모리 데이터베이스
    compileOnly 'org.projectlombok:lombok'  // 롬복
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
//    스프링 시큐리티를 사용하기 위한 스타터 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'
//    타임리프에서 스프링 시큐리티를 사용하기 위한 의존성 추가
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
//    스프링 시큐리티를 테스트하기 위한 의존성 추가
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}
/*
(1) plugins 에는 프로젝트에 사용할 플러그인인 스프링 부트 플러그인 org.springframework.boot
    와 스프링의 의존성을 자동으로 관리하는 spring.dependency-management 를 추가

(2) group 에는 프로젝트를 설정할 때의 기본값인 그룹 이름과 버전이 입력되어 있음
    여기에 추가로 자바 소스를 컴파일할 때 사용할 자바 버전을 입력

(3) repositories 에는 의존성을 받을 저장소를 지정함

(4) dependencies 는 프로젝트를 개발하며 필요한 기능의 의존성을 입력함
    기본값을 모두 지우고 웹 관련 기능을 제공하는 spring-boot-starter-web 과
                        테스트 기능을 제공하는 spring-boot-starter-test 를 입력
*/

/*
    우측 gradle 버튼(코끼리) 클릭
    Dependencies 항목을 펼쳐보면 web 스타터를 확인 가능


*/
